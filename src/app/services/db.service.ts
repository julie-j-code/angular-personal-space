import { Injectable } from '@angular/core';
import { PersonalSpace } from '../models/personal-space';
import {
  AngularFirestore,
  AngularFirestoreCollection,
} from '@angular/fire/firestore';
import { Observable } from 'rxjs';
import firebase from 'firebase';

@Injectable({
  providedIn: 'root',
})
export class DbService {
  private personalSpaceCollection: AngularFirestoreCollection<PersonalSpace>;
  personalSpaces: Observable<PersonalSpace[]>;
  collectionName = 'personal-spaces';

  constructor(private afs: AngularFirestore) {
    this.personalSpaceCollection = afs.collection<PersonalSpace>(
      this.collectionName
    );
    this.personalSpaces = this.personalSpaceCollection.valueChanges();
  }

  createPersonalSpace(user:any) {
    // we chose a create a specific id (the id will NOT be generated by Firestore)
    // then we create a document matching this id
    return this.personalSpaceCollection.doc(`ps-${user.uid}`).set({
      uid: user.uid,
      displayName: user.displayName,
      createdAt: Date.now(),
    });
  }

  readPersonalSpaces(): Observable<PersonalSpace[]> {
    return this.personalSpaces;
  }

  readPersonalSpaceByUID(uid: string) {
    return this.afs
      .collection(this.collectionName, (ref) => ref.where('uid', '==', uid))
      .valueChanges({ idField: 'id' });
  }

  updatePersonalSpacePhotoURLs(user:any, photoURL:any) {
    return this.afs
      .collection(this.collectionName)
      .doc(`ps-${user.uid}`)
      .update({
        photoURLs: firebase.firestore.FieldValue.arrayUnion(photoURL),
      });
  }
}
